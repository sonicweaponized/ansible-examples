---
- hosts: tig-stack
  become: true
  gather_facts: no

  tasks:
    - name: Install Python for Ansible
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python2.7 python-minimal)
      changed_when: False

    - name: Upgrade packages
      apt: upgrade=dist

    - name: Check if a reboot is required
      register: reboot_required_file
      stat: path=/var/run/reboot-required get_md5=no

    - name: Restart Machine
      become: yes
      shell: sleep 2 && shutdown -r now "Ansible updates triggered"
      async: 1
      poll: 0
      ignore_errors: true
      when: reboot_required_file.stat.exists == true


    - name: Waiting for Server to come back
      become: no
      local_action: wait_for
        port=22
        host={{ ansible_host }}
        search_regex=OpenSSH
        delay=10
    
    - name: Add influxDB Repo Key
      apt_key: url=https://repos.influxdata.com/influxdb.key state=present

    - name: Add influxDB Repo
      apt_repository: repo='deb https://repos.influxdata.com/ubuntu/ bionic stable' state=present filename='influxdb' update_cache='yes'

    - name: Install influxDB
      apt: name='influxdb' state='present' update_cache='yes'

    - name: Install pip
      apt: name='python-pip' state='present' update_cache='yes'

    - name: Enable service for influxDB
      systemd:
        name: influxdb
        enabled: yes
        masked: no

    - name: Make sure influxDB is running
      systemd: state=started name='influxdb'

    - name: Prerequests for influxDB Database Steps
      pip:
        name: ['requests', 'influxdb']

    - name: Add User to influxDB
      uri:
        url: "http://localhost:8086/query"
        method: POST
        body: "q=CREATE USER itnetwork WITH PASSWORD 'itnetwork'"

    - name: Create telegraf Database
      uri:
        url: "http://localhost:8086/query"
        method: POST
        body: "q=CREATE DATABASE telegraf"

    - name: Install telegraf
      apt: name='telegraf' state='present' update_cache='yes'

    - name: Enable Service for telegraf
      systemd:
        name: telegraf
        enabled: yes
        masked: no

    - name: Make sure telegraf is running
      systemd: state=started name='telegraf'
  
    - name: Copy telegraf.conf
      copy:
        src: ./etc/telegraf.conf
        dest: /etc/telegraf/telegraf.conf

    - name: Manage telegraf configuration
      command: telegraf config -input-filter cpu:mem:disk:swap:system -output-filter influxdb > telegraf.conf

    - name: Restart telegraf Service
      service:
        name: telegraf
        state: restarted

    - name: Add Grafana repo key
      apt_key: url=https://packages.grafana.com/gpg.key state=present

    - name: Add Grafana repo
      apt_repository: repo='deb https://packages.grafana.com/oss/deb stable main' state=present filename='grafana' update_cache='yes'

    - name: Install Grafana
      apt: name='grafana' state='present' update_cache='yes'

    - name: Enable Service for Grafana
      systemd:
        name: grafana-server
        enabled: yes
        masked: no

    - name: Make sure Grafana is running
      systemd: state=started name='grafana-server'
